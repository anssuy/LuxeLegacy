@model LuxeLegacy.Models.Cart
@{
    ViewBag.Title = "Checkout";
}

<h2>Checkout</h2>


<form id="checkoutForm">
    <fieldset>
        <legend>Personal Information</legend>
        <div class="form-group">
            <label for="first-name">First Name:</label>
            <input class="form-control" type="text" id="first-name" name="first_name" required>
        </div>

        <div class="form-group">
            <label for="last-name">Last Name:</label>
            <input class="form-control" type="text" id="last-name" name="last_name" required>
        </div>

        <div class="form-group">
            <label for="email">Email Address:</label>
            <input class="form-control" type="email" id="email" name="email" required>
            <span class="error-message" style="color: red" id="email-error"></span>
        </div>

        <div class="form-group">
            <label for="phone">Phone Number:</label>
            <input class="form-control" type="tel" id="phone" name="phone" required>
            <span class="phone-message" style="color: red" id="phone-error"></span>
        </div>
    </fieldset>

    <fieldset>
        <legend>Shipping Address</legend>

        <div class="form-group">
            <label for="address">Street Address:</label>
            <input class="form-control" type="text" id="address" name="address" required>
        </div>

        <div class="form-group">
            <label for="city">City:</label>
            <input class="form-control" type="text" id="city" name="city" required>
        </div>

        <div class="form-group half-width">
            <label for="state">State/Province:</label>
            <input class="form-control" type="text" id="state" name="state" required>
        </div>

        <div class="form-group half-width">
            <label for="zip">Postal Code:</label>
            <input class="form-control" type="text" id="zip" name="zip" required>
            <span class="zip-message" style="color: red" id="zip-error"></span>
        </div>

        <div class="form-group">
            <label for="country">Country:</label>
            <select class="form-control" id="country" name="country" required>
                <option value="US">United States</option>
                <option value="CA">Canada</option>
                <option value="UK">United Kingdom</option>
                <option value="AU">Australia</option>
            </select>
        </div>
    </fieldset>

    <fieldset>
        <legend>Payment Information</legend>

        <div class="form-group">
            <label for="card-name">Name on Card:</label>
            <input class="form-control" type="text" id="card-name" name="card_name" required>
        </div>

        <div class="form-group">
            <label for="card-number">Card Number:</label>
            <input class="form-control" type="text" id="card-number" name="card_number" required>
            <span class="card-number-message" style="color: red" id="card-number-error"></span>
        </div>

        <div class="form-group half-width">
            <label for="expiry-date">Expiry Date (MM/YY):</label>
            <input class="form-control" type="text" id="expiry-date" name="expiry_date" placeholder="MM/YY" required>
            <span class="date-message" style="color: red" id="date-error"></span>
        </div>

        <div class="form-group half-width">
            <label for="cvv">CVV:</label>
            <input class="form-control" type="text" id="cvv" name="cvv" required>
            <span class="cvv-message" style="color: red" id="cvv-error"></span>
        </div>
    </fieldset>

    <fieldset>
        <legend>Order Summary</legend>

        <div class="form-group">
            <label for="items">Items:</label>
            <textarea class="form-control" id="items" name="items" rows="5" readonly>
            @foreach(var item in Model.CartItems)
            {
                @item.Product.Name
            }
        </textarea>
        </div>

        <div class="form-group">
            <label for="total-price">Total Price:</label>
            <input class="form-control" type="text" id="total-price" name="total_price" readonly value=@Model.TotalAmount>
        </div>
    </fieldset>
        <div class="form-group">
            <button type="button" class="btn btn-success" id="submitButton">Place Order</button>
        </div>
</form>

<script>
    document.getElementById('submitButton').addEventListener('click', function () {
        const form = document.getElementById('checkoutForm');
        const inputs = form.querySelectorAll('input[required]');
        let formIsValid = true;

        document.getElementById('email-error').textContent = '';
        document.getElementById('card-number-error').textContent = '';
        document.getElementById('phone-error').textContent = '';
        document.getElementById('zip-error').textContent = '';
        document.getElementById('cvv-error').textContent = '';

        inputs.forEach(function (input) {
            if (!input.value.trim()) {
                input.classList.add('error');
                formIsValid = false;
            } else {
                input.classList.remove('error');
            }
        });

        const email = document.getElementById('email').value;
        const emailRegex = /^[^\s@('@')]+@('@')[^\s@('@')]+.[^\s@('@')]+$/;
        if (!emailRegex.test(email)) {
            document.getElementById('email').classList.add('error');
            document.getElementById('email-error').textContent = 'Please enter a valid email address.';
            formIsValid = false;
        }

        const cardNumber = document.getElementById('card-number').value;
        const cardRegex = /^[0-9]{16}$/;
        if (!cardRegex.test(cardNumber)) {
            document.getElementById('card-number').classList.add('error');
            document.getElementById('card-number-error').textContent = 'Card number most contain 16 digits.';
            formIsValid = false;
        }

        const phone = document.getElementById('phone').value;
        const phoneRegex = /^[0-9]+$/;
        if (!phoneRegex.test(phone)) {
            document.getElementById('phone').classList.add('error');
            document.getElementById('phone-error').textContent = 'Phone number must contain only digits.';
            formIsValid = false;
        }

        const zip = document.getElementById('zip').value;
        const zipRegex = /^[0-9]+$/;
        if (!zipRegex.test(zip)) {
            document.getElementById('zip').classList.add('error');
            document.getElementById('zip-error').textContent = 'Postal code must contain only digits.';
            formIsValid = false;
        }

        const cvv = document.getElementById('cvv').value;
        const cvvRegex = /^[0-9]{3}$/;
        if (!cvvRegex.test(cvv)) {
            document.getElementById('cvv').classList.add('error');
            document.getElementById('cvv-error').textContent = 'CVV must contain only 3 digits.';
            formIsValid = false;
        }

        if (formIsValid) {
            $.ajax({
                method: "GET",
                url: "/Carts/ClearCart/",
                success: function () { window.location.href = "/Carts/OrderCompleted"; }
            });
            window.location.href = "/Carts/OrderCompleted";
        } else {
            bootbox.alert({
                message: "Please fill in all required fields.",
                backdrop: true
            });
        }
    });
</script>
